{"version":3,"file":"static/js/394.500cc553.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/api/fetchMovies.js","components/common/Error.jsx","components/common/Wrapper.jsx","pages/MoviesHome.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Title = styled.h1`\n  font-size: ${p => p.theme.fontSizes.l};\n  margin-bottom: ${p => p.theme.space[4]}px;\n`;\n\nexport const List = styled.ul``;\n\nexport const ListItem = styled.li`\n  font-size: ${p => p.theme.fontSizes.m};\n  font-weight: ${p => p.theme.fontWeights.normal};\n  :not(:last-child) {\n    margin-bottom: ${p => p.theme.space[3]}px;\n  }\n`;\n\nexport const MovieLink = styled(Link)`\n  color: ${p => p.theme.colors.black};\n  text-decoration: none;\n  padding: ${p => p.theme.space[2]}px;\n  &:hover,\n  &:focus {\n    text-decoration: underline;\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport { useLocation } from 'react-router-dom';\n\nimport { List, Title, ListItem, MovieLink } from './MoviesList.styled';\n\nexport const MoviesList = ({ title, moviesList }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {title && <Title>{title}</Title>}\n      {moviesList.map(({ id, title }) => {\n        return (\n          <ListItem key={id}>\n            <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n              {title}\n            </MovieLink>\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n};\n\nMoviesList.propTypes = {\n  title: PropTypes.string,\n  moviesList: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n};\n","import axios from 'axios';\n\nconst KEY = '5f2a66e63fa9a8139a0b7e8b9aba27ca';\nconst URL = 'https://api.themoviedb.org/';\n\naxios.defaults.baseURL = URL;\n\n// Загальна інформація про фільми\nexport const getMoviesList = async (page = 1, language = 'en') => {\n  try {\n    const server = await axios.get(\n      `3/trending/movie/day?api_key=${KEY}&page=${page}&language=${language}`\n    );\n\n    const data = await server.data;\n\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// Повна інформація про фільм\nexport const getDataMovie = async (id, language = 'en') => {\n  try {\n    const server = await axios.get(\n      `3/movie/${id}?api_key=${KEY}&language=${language}`\n    );\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// пошук по ключовому слову\nexport const getMovieByQuery = async (name, page = 1, language = 'en') => {\n  try {\n    const server = await axios.get(\n      `3/search/movie?api_key=${KEY}&language=${language}&query=${name}&page=${page}&include_adult=false`\n    );\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// Список акторів\nexport const getMovieCast = async (id, language = 'en') => {\n  try {\n    const server = await axios.get(\n      `3/movie/${id}/credits?api_key=${KEY}&language=${language}`\n    );\n    const data = await server.data;\n    return data.cast;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// Список відгуки\nexport const getMovieReviews = async (id, language = 'en') => {\n  try {\n    const server = await axios.get(\n      `3/movie/${id}/reviews?api_key=${KEY}&language=${language}`\n    );\n    const data = await server.data;\n    return data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n","export const Error = () => {\n  return <div>Try again later</div>;\n};\n","import styled from 'styled-components';\n\nconst WrapperStyled = styled.div`\n  padding: ${p => p.theme.space[5]}px;\n`;\n\nexport const Wrapper = ({ children }) => {\n  return <WrapperStyled>{children}</WrapperStyled>;\n};\n","import { useEffect, useState } from 'react';\nimport { getMoviesList } from '../components/api/fetchMovies';\nimport { Wrapper } from '../components/common/Wrapper';\nimport { MoviesList } from '../components/MoviesList/MoviesList';\nimport { Loading } from 'components/common/Loading';\nimport { Error } from 'components/common/Error';\n\nconst MoviesHome = () => {\n  const [moviesList, setMoviesList] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      try {\n        const moviesList = await getMoviesList();\n        setMoviesList(moviesList.results);\n      } catch (error) {\n        console.log('error :>> ', error);\n        setError(`No data in fetch moviesList ${error}`);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <Wrapper>\n      {!isLoading ? (\n        <MoviesList title=\"Trending today\" moviesList={moviesList} />\n      ) : (\n        <Loading />\n      )}\n      {error && <Error />}\n    </Wrapper>\n  );\n};\n\nexport default MoviesHome;\n"],"names":["Title","styled","p","theme","fontSizes","l","space","List","ListItem","m","fontWeights","normal","MovieLink","Link","colors","black","MoviesList","title","moviesList","location","useLocation","map","id","to","state","from","KEY","axios","getMoviesList","page","language","server","data","console","error","getDataMovie","getMovieByQuery","name","getMovieCast","cast","getMovieReviews","results","Error","WrapperStyled","Wrapper","children","useState","setMoviesList","setError","isLoading","setIsLoading","useEffect","fetchData","log"],"sourceRoot":""}