{"version":3,"file":"static/js/383.5d293235.chunk.js","mappings":"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","sources":["components/Reviews/Revies.styled.jsx","components/Reviews/Reviews.jsx","components/api/fetchMovies.js","components/common/Error.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: ${p => p.theme.space[3]}px;\n  padding: ${p => p.theme.space[4]}px;\n  & h3 {\n    margin-bottom: ${p => p.theme.space[4]}px;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from '../api/fetchMovies';\nimport { ReviewsList } from './Revies.styled';\nimport { Loading } from 'components/common/Loading';\nimport { Error } from 'components/common/Error';\n\nconst Reviews = () => {\n  const { id } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      try {\n        const reviews = await getMovieReviews(id);\n        setReviews(reviews);\n      } catch (error) {\n        setError(`No data in fetch MovieCast ${error}`);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      {isLoading && <Loading />}\n      {reviews.length > 0 ? (\n        <ReviewsList>\n          {reviews.map(({ id, author, content }) => {\n            return (\n              <li key={id}>\n                <h3>Author: {author}</h3>\n                <p>{content}</p>\n              </li>\n            );\n          })}\n        </ReviewsList>\n      ) : (\n        <p>There is nothing here</p>\n      )}\n      {error && <Error />}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst KEY = '5f2a66e63fa9a8139a0b7e8b9aba27ca';\nconst URL = 'https://api.themoviedb.org/';\n\naxios.defaults.baseURL = URL;\n\n// Загальна інформація про фільми\nexport const getMoviesList = async (page = 1, language = 'en') => {\n  try {\n    const server = await axios.get(\n      `3/trending/movie/day?api_key=${KEY}&page=${page}&language=${language}`\n    );\n\n    const data = await server.data;\n\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// Повна інформація про фільм\nexport const getDataMovie = async (id, language = 'en') => {\n  try {\n    const server = await axios.get(\n      `3/movie/${id}?api_key=${KEY}&language=${language}`\n    );\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// пошук по ключовому слову\nexport const getMovieByQuery = async (name, page = 1, language = 'en') => {\n  try {\n    const server = await axios.get(\n      `3/search/movie?api_key=${KEY}&language=${language}&query=${name}&page=${page}&include_adult=false`\n    );\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// Список акторів\nexport const getMovieCast = async (id, language = 'en') => {\n  try {\n    const server = await axios.get(\n      `3/movie/${id}/credits?api_key=${KEY}&language=${language}`\n    );\n    const data = await server.data;\n    return data.cast;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// Список відгуки\nexport const getMovieReviews = async (id, language = 'en') => {\n  try {\n    const server = await axios.get(\n      `3/movie/${id}/reviews?api_key=${KEY}&language=${language}`\n    );\n    const data = await server.data;\n    return data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n","export const Error = () => {\n  return <div>Try again later</div>;\n};\n"],"names":["ReviewsList","styled","p","theme","space","id","useParams","useState","reviews","setReviews","error","setError","isLoading","setIsLoading","useEffect","fetchData","getMovieReviews","Loading","length","map","author","content","Error","KEY","axios","getMoviesList","page","language","server","data","console","getDataMovie","getMovieByQuery","name","getMovieCast","cast","results"],"sourceRoot":""}