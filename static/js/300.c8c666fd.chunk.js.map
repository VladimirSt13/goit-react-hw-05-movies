{"version":3,"file":"static/js/300.c8c666fd.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","utils/helpers.js","components/api/fetchMovies.js","components/common/Error.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: ${p => p.theme.space[3]}px;\n  padding: ${p => p.theme.space[4]}px;\n\n  & li {\n    width: 150px;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCast } from '../api/fetchMovies';\nimport { CastList } from './Cast.styled';\nimport { Loading } from 'components/common/Loading';\nimport { Error } from 'components/common/Error';\nimport { filterUnicObjInArray } from 'utils/helpers';\n\nconst Cast = () => {\n  const { id } = useParams();\n  const [cast, setCast] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      try {\n        const cast = await getMovieCast(id);\n        setCast(filterUnicObjInArray(cast));\n      } catch (error) {\n        setError(`No data in fetch MovieCast ${error}`);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      {isLoading && <Loading />}\n      {cast.length > 0 ? (\n        <CastList>\n          {cast.map(({ id, profile_path, name, character }) => {\n            return (\n              <li key={id}>\n                <img\n                  src={\n                    profile_path\n                      ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                      : 'https://dw.ksdr1.net/wp-content/uploads/sites/2/2018/08/photo-coming-soon.jpg'\n                  }\n                  alt={name}\n                  width=\"150\"\n                  height=\"225\"\n                />\n                <p>\n                  {name} {character && <span>as {character}</span>}\n                </p>\n              </li>\n            );\n          })}\n        </CastList>\n      ) : (\n        <div>There is nothing here</div>\n      )}\n      {error && <Error />}\n    </>\n  );\n};\n\nexport default Cast;\n","export const filterUnicObjInArray = arr =>\n  arr.filter(({ id }, index, a) => a.findIndex(e => id === e.id) === index);\n","import axios from 'axios';\n\nconst KEY = '5f2a66e63fa9a8139a0b7e8b9aba27ca';\nconst URL = 'https://api.themoviedb.org/';\n\naxios.defaults.baseURL = URL;\n\n// Загальна інформація про фільми\nexport const getMoviesList = async (page = 1, language = 'en') => {\n  try {\n    const server = await axios.get(\n      `3/trending/movie/day?api_key=${KEY}&page=${page}&language=${language}`\n    );\n\n    const data = await server.data;\n\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// Повна інформація про фільм\nexport const getDataMovie = async (id, language = 'en') => {\n  try {\n    const server = await axios.get(\n      `3/movie/${id}?api_key=${KEY}&language=${language}`\n    );\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// пошук по ключовому слову\nexport const getMovieByQuery = async (name, page = 1, language = 'en') => {\n  try {\n    const server = await axios.get(\n      `3/search/movie?api_key=${KEY}&language=${language}&query=${name}&page=${page}&include_adult=false`\n    );\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// Список акторів\nexport const getMovieCast = async (id, language = 'en') => {\n  try {\n    const server = await axios.get(\n      `3/movie/${id}/credits?api_key=${KEY}&language=${language}`\n    );\n    const data = await server.data;\n    return data.cast;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// Список відгуки\nexport const getMovieReviews = async (id, language = 'en') => {\n  try {\n    const server = await axios.get(\n      `3/movie/${id}/reviews?api_key=${KEY}&language=${language}`\n    );\n    const data = await server.data;\n    return data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n","export const Error = () => {\n  return <div>Try again later</div>;\n};\n"],"names":["CastList","styled","p","theme","space","id","useParams","useState","cast","setCast","error","setError","isLoading","setIsLoading","useEffect","fetchData","getMovieCast","filter","index","a","findIndex","e","Loading","length","map","profile_path","name","character","src","alt","width","height","Error","KEY","axios","getMoviesList","page","language","server","data","console","getDataMovie","getMovieByQuery","getMovieReviews","results"],"sourceRoot":""}