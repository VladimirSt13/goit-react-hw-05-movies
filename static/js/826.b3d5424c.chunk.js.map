{"version":3,"file":"static/js/826.b3d5424c.chunk.js","mappings":"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","sources":["components/api/fetchMovies.js","components/common/Error.jsx","components/common/Wrapper.jsx","components/common/BackLink.jsx","components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","components/AdditionalInfo/AdditionalInfo.styled.jsx","components/AdditionalInfo/AdditionalInfo.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '5f2a66e63fa9a8139a0b7e8b9aba27ca';\nconst URL = 'https://api.themoviedb.org/';\n\naxios.defaults.baseURL = URL;\n\n// Загальна інформація про фільми\nexport const getMoviesList = async (page = 1, language = 'en') => {\n  try {\n    const server = await axios.get(\n      `3/trending/movie/day?api_key=${KEY}&page=${page}&language=${language}`\n    );\n\n    const data = await server.data;\n\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// Повна інформація про фільм\nexport const getDataMovie = async (id, language = 'en') => {\n  try {\n    const server = await axios.get(\n      `3/movie/${id}?api_key=${KEY}&language=${language}`\n    );\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// пошук по ключовому слову\nexport const getMovieByQuery = async (name, page = 1, language = 'en') => {\n  try {\n    const server = await axios.get(\n      `3/search/movie?api_key=${KEY}&language=${language}&query=${name}&page=${page}&include_adult=false`\n    );\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// Список акторів\nexport const getMovieCast = async (id, language = 'en') => {\n  try {\n    const server = await axios.get(\n      `3/movie/${id}/credits?api_key=${KEY}&language=${language}`\n    );\n    const data = await server.data;\n    return data.cast;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// Список відгуки\nexport const getMovieReviews = async (id, language = 'en') => {\n  try {\n    const server = await axios.get(\n      `3/movie/${id}/reviews?api_key=${KEY}&language=${language}`\n    );\n    const data = await server.data;\n    return data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n","export const Error = () => {\n  return <div>Try again later</div>;\n};\n","import styled from 'styled-components';\n\nconst WrapperStyled = styled.div`\n  padding: ${p => p.theme.space[5]}px;\n`;\n\nexport const Wrapper = ({ children }) => {\n  return <WrapperStyled>{children}</WrapperStyled>;\n};\n","import { HiArrowLeft } from 'react-icons/hi';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orangered;\n  }\n`;\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  padding: ${p => p.theme.space[4]}px;\n  gap: 24px;\n  border-bottom: 1px solid black;\n`;\n\nexport const MovieWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n`;\n\nexport const MovieTitle = styled.h1``;\n","import PropTypes from 'prop-types';\n\nimport {\n  Wrapper,\n  MovieWrapper,\n  MovieTitle,\n} from 'components/MovieCard/MovieCard.styled';\n\nexport const MovieCard = ({ movie }) => {\n  const {\n    poster_path,\n    title,\n    vote_average,\n    vote_count,\n    overview,\n    genres: genresData,\n  } = movie;\n\n  const userScore = vote_average\n    ? Math.round((vote_average / vote_count) * 100)\n    : 0;\n  const genres = genresData && genresData.map(({ name }) => name).join(', ');\n  const fullPosterPath = poster_path\n    ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n    : 'https://upload.wikimedia.org/wikipedia/commons/6/64/Poster_not_available.jpg';\n\n  return (\n    <Wrapper>\n      <img src={fullPosterPath} alt=\"{title}\" width=\"300\" height=\"450\" />\n      <MovieWrapper>\n        <MovieTitle>{title}</MovieTitle>\n        <p>User score: {userScore}%</p>\n        <h3>Owerview</h3>\n        <p>{overview}</p>\n        {genres && (\n          <>\n            <h3>Genres</h3>\n            <p>{genres}</p>\n          </>\n        )}\n      </MovieWrapper>\n    </Wrapper>\n  );\n};\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n    vote_count: PropTypes.number.isRequired,\n    overview: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string.isRequired,\n      })\n    ).isRequired,\n  }).isRequired,\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Wrapper = styled.div`\n  padding: ${p => p.theme.space[3]}px;\n  border-bottom: ${p => p.theme.borders.normal} ${p => p.theme.colors.black};\n`;\n\nexport const Title = styled.p`\n  margin-bottom: ${p => p.theme.space[2]}px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  gap: ${p => p.theme.space[2]}px;\n`;\n\nexport const Link = styled(NavLink)`\n  padding: ${p => p.theme.space[3]}px ${p => p.theme.space[4]}px;\n  border-radius: ${p => p.theme.radii.normal}px;\n  text-decoration: none;\n  color: black;\n  font-weight: ${p => p.theme.fontWeights.semiBold};\n  font-size: ${p => p.theme.fontSizes.m};\n\n  &.active {\n    color: ${p => p.theme.colors.accent};\n    font-weight: ${p => p.theme.fontWeights.bold};\n  }\n\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    text-decoration: underline;\n  }\n`;\n","import { Title, List, Link, Wrapper } from './AdditionalInfo.styled';\n\nexport const AdditionalInfo = () => {\n  return (\n    <Wrapper>\n      <Title>Additional info:</Title>\n      <List>\n        <li>\n          <Link to={'cast'}>Cast</Link>\n        </li>\n        <li>\n          <Link to={'reviews'}>Review</Link>\n        </li>\n      </List>\n    </Wrapper>\n  );\n};\n","import { useEffect, useState, Suspense } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getDataMovie } from 'components/api/fetchMovies';\nimport { Wrapper } from 'components/common/Wrapper';\nimport { BackLink } from 'components/common/BackLink';\nimport { MovieCard } from '../components/MovieCard/MovieCard';\nimport { Loading } from 'components/common/Loading';\nimport { AdditionalInfo } from '../components/AdditionalInfo/AdditionalInfo';\nimport { Error } from 'components/common/Error';\n\nconst MovieDetails = () => {\n  const { id } = useParams();\n  const [movie, setMovie] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [backLinkHref, setBackLinkHref] = useState('');\n\n  const location = useLocation();\n\n  useEffect(() => {\n    setBackLinkHref(location.state?.from ?? '/movies');\n    const fetchData = async () => {\n      setIsLoading(true);\n      try {\n        const movie = await getDataMovie(id);\n        setMovie(movie);\n      } catch (error) {\n        setError(`No data in fetch MovieDetails ${error}`);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Wrapper>\n      {isLoading && <Loading />}\n\n      {movie && (\n        <>\n          <BackLink to={backLinkHref}>Go back</BackLink>\n          <MovieCard movie={movie} />\n          <AdditionalInfo />\n          <Suspense fallback={<Loading />}>\n            <Outlet />\n          </Suspense>\n        </>\n      )}\n      {error && <Error />}\n    </Wrapper>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["KEY","axios","getMoviesList","page","language","server","data","console","error","getDataMovie","id","getMovieByQuery","name","getMovieCast","cast","getMovieReviews","results","Error","WrapperStyled","styled","p","theme","space","Wrapper","children","StyledLink","Link","BackLink","to","size","MovieWrapper","MovieTitle","MovieCard","movie","poster_path","title","vote_average","vote_count","overview","genresData","genres","userScore","Math","round","map","join","fullPosterPath","src","alt","width","height","borders","normal","colors","black","Title","List","NavLink","radii","fontWeights","semiBold","fontSizes","m","accent","bold","AdditionalInfo","useParams","useState","setMovie","setError","isLoading","setIsLoading","backLinkHref","setBackLinkHref","location","useLocation","useEffect","state","from","fetchData","Loading","Suspense","fallback"],"sourceRoot":""}